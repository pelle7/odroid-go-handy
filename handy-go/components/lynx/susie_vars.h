VAR_PREFIX  ULONG cycles_used;

VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mTMPADR_;		// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mTILTACUM_;		// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mHOFF;			// CPU
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mVOFF;			// CPU
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mVIDBAS;		// CPU
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mCOLLBAS;		// CPU
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mVIDADR;		// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mCOLLADR;		// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mSCBNEXT;		// SCB
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mSPRDLINE_;		// SCB
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mHPOSSTRT_;		// SCB
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mVPOSSTRT;		// SCB
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mSPRHSIZ_;		// SCB
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mSPRVSIZ_;		// SCB
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mSTRETCH_;		// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mTILT_;			// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mSPRDOFF_;		// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mSPRVPOS;		// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mCOLLOFF;		// CPU
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mVSIZACUM;		// ENG
#ifndef SUSIE_INLINE_LineGetBits_V2
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mHSIZACUM;		//    K.s creation
#endif
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mHSIZOFF;		// CPU
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mVSIZOFF;		// CPU
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mSCBADR_;		// ENG
VAR_PREFIX  WORD_ALIGNED_ATTR UUWORD		mPROCADR;		// ENG

VAR_PREFIX  TMATHABCD	mMATHABCD;		// ENG
VAR_PREFIX  TMATHEFGH	mMATHEFGH;		// ENG
VAR_PREFIX  TMATHJKLM	mMATHJKLM;		// ENG
VAR_PREFIX  TMATHNP		mMATHNP;		// ENG
VAR_PREFIX  int			mMATHAB_sign;
VAR_PREFIX  int			mMATHCD_sign;
VAR_PREFIX  int			mMATHEFGH_sign;

#ifndef MY_SUSIE_PIXEL_HLOOP
VAR_PREFIX  int			mSPRCTL0_Type;			// SCB
#endif
VAR_PREFIX  int			mSPRCTL0_Vflip;
VAR_PREFIX  int			mSPRCTL0_Hflip;
VAR_PREFIX  int			mSPRCTL0_PixelBits;

VAR_PREFIX  int			mSPRCTL1_StartLeft;		// SCB
VAR_PREFIX  int			mSPRCTL1_StartUp;
VAR_PREFIX  int			mSPRCTL1_SkipSprite;
VAR_PREFIX  int			mSPRCTL1_ReloadPalette;
VAR_PREFIX  int			mSPRCTL1_ReloadDepth;
VAR_PREFIX  int			mSPRCTL1_Sizing;
VAR_PREFIX  int			mSPRCTL1_Literal;

VAR_PREFIX  int			mSPRCOLL_Number;		//CPU
VAR_PREFIX  int			mSPRCOLL_Collide;

VAR_PREFIX  int			mSPRSYS_StopOnCurrent;	//CPU
VAR_PREFIX  int			mSPRSYS_LeftHand;
VAR_PREFIX  int			mSPRSYS_VStretch;
VAR_PREFIX  int			mSPRSYS_NoCollide;
VAR_PREFIX  int			mSPRSYS_Accumulate;
VAR_PREFIX  int			mSPRSYS_SignedMath;
VAR_PREFIX  int			mSPRSYS_Status;
VAR_PREFIX  int			mSPRSYS_UnsafeAccess;
VAR_PREFIX  int			mSPRSYS_LastCarry;
VAR_PREFIX  int			mSPRSYS_Mathbit;
VAR_PREFIX  int			mSPRSYS_MathInProgress;

VAR_PREFIX  ULONG		mSUZYBUSEN;		// CPU

VAR_PREFIX  TSPRINIT	mSPRINIT;		// CPU

VAR_PREFIX  ULONG		mSPRGO;			// CPU
VAR_PREFIX  int			mEVERON;

VAR_PREFIX  UBYTE		mPenIndex[16];	// SCB

 // Line rendering related variables

#ifndef SUSIE_INLINE_LineGetBits_V2
VAR_PREFIX  ULONG		mLineType;
VAR_PREFIX  ULONG		mLineShiftRegCount;
VAR_PREFIX  ULONG		mLineShiftReg;
VAR_PREFIX  ULONG		mLineRepeatCount;
VAR_PREFIX  ULONG		mLinePixel;
VAR_PREFIX  ULONG		mLinePacketBitsLeft;
#endif

VAR_PREFIX  int			mCollision;
  #ifdef MY_NO_STATIC
VAR_PREFIX  int vquadoff;
VAR_PREFIX  int hquadoff;
  #endif

VAR_PREFIX  UBYTE		*mRamPointer;

VAR_PREFIX  ULONG		mLineBaseAddress;
VAR_PREFIX  ULONG		mLineCollisionAddress;

  // Joystick switches

VAR_PREFIX  TJOYSTICK	mJOYSTICK;
VAR_PREFIX  TSWITCHES	mSWITCHES;
